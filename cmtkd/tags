!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
AFX_INIHELPER_H__E176C25B_C58B_4765_B150_4A8E42898ED4__INCLUDED_	IniHelper.h	6;"	d
BLUE	ColorDefine.h	8;"	d
BROWN	ColorDefine.h	15;"	d
CC	Makefile	/^CC=c++$/;"	m
CFLAG	Makefile	/^CFLAG=-c -Wall -I.\/ -D__LINUX__ -g -I\/usr\/local\/Ice-3.3.1\/include$/;"	m
CIniHelper	IniHelper.cpp	/^CIniHelper::CIniHelper(const char* file)$/;"	f	class:CIniHelper
CIniHelper	IniHelper.h	/^class CIniHelper  $/;"	c
CLOSE	os_independent.h	15;"	d
CLOSE	os_independent.h	41;"	d
CLOSE_FILE	os_independent.h	14;"	d
CMD_LEN	cmconfig.h	48;"	d
CMD_TYPE	constdef.h	/^enum CMD_TYPE$/;"	g
CMD_TYPE_CONF	constdef.h	/^	CMD_TYPE_CONF = 2$/;"	e	enum:CMD_TYPE
CMD_TYPE_NOTIFY	constdef.h	/^	CMD_TYPE_NOTIFY = 1,$/;"	e	enum:CMD_TYPE
CMTKD_CONF	cmconfig.h	11;"	d
CM_IP_LIST	cmconfig.h	10;"	d
CMessageHandler	MessageHandler.cpp	/^CMessageHandler::CMessageHandler()$/;"	f	class:CMessageHandler
CMessageHandler	MessageHandler.h	/^class CMessageHandler: public CmdMessageHandler$/;"	c
CONF_DIR	cmconfig.h	41;"	d
CONF_FILE	cmconfig.h	40;"	d
CYAN	ColorDefine.h	11;"	d
CmdMessageHandler	cmdhelper.h	/^class CmdMessageHandler : virtual public ::Ice::Object$/;"	c	namespace:cmdhelper
CmdMessageHandler	cmdhelper.h	/^class CmdMessageHandler : virtual public ::IceDelegate::Ice::Object$/;"	c	namespace:IceDelegate::cmdhelper
CmdMessageHandler	cmdhelper.h	/^class CmdMessageHandler : virtual public ::IceDelegate::cmdhelper::CmdMessageHandler,$/;"	c	namespace:IceDelegateD::cmdhelper
CmdMessageHandler	cmdhelper.h	/^class CmdMessageHandler : virtual public ::IceDelegate::cmdhelper::CmdMessageHandler,$/;"	c	namespace:IceDelegateM::cmdhelper
CmdMessageHandler	cmdhelper.h	/^class CmdMessageHandler : virtual public ::IceProxy::Ice::Object$/;"	c	namespace:IceProxy::cmdhelper
CmdMessageHandlerPrx	cmdhelper.h	/^typedef ::IceInternal::ProxyHandle< ::IceProxy::cmdhelper::CmdMessageHandler> CmdMessageHandlerPrx;$/;"	t	namespace:cmdhelper
CmdMessageHandlerPtr	cmdhelper.h	/^typedef ::IceInternal::Handle< ::cmdhelper::CmdMessageHandler> CmdMessageHandlerPtr;$/;"	t	namespace:cmdhelper
CommandMessage	cmdhelper.h	/^struct CommandMessage$/;"	s	namespace:cmdhelper
DARY_GRAY	ColorDefine.h	10;"	d
DEV_TYPE_CMD	cmconfig.h	8;"	d
DEV_TYPE_STAT	cmconfig.h	9;"	d
DFLAG	Makefile	/^DFLAG=-lIce -lIceUtil -lpthread -L\/usr\/local\/Ice-3.3.1\/lib$/;"	m
DFT_DM	cmconfig.h	5;"	d
DFT_LOGIN	constdef.h	15;"	d
DFT_MODE	cmconfig.h	6;"	d
DFT_PORT	cmconfig.h	4;"	d
DFT_THREAD	cmconfig.h	7;"	d
ErrorOccurence	IniHelper.cpp	/^int CIniHelper::ErrorOccurence()$/;"	f	class:CIniHelper
GREEN	ColorDefine.h	6;"	d
GetNetip	NetHelper.cpp	/^int	GetNetip(device_t *list)$/;"	f
GetNetip	NetHelper.cpp	/^int	GetNetip(unsigned int *ip)$/;"	f
HOST_NAME	cmconfig.h	53;"	d
INFO_DIR	constdef.h	14;"	d
IceDelegate	cmdhelper.h	/^namespace IceDelegate$/;"	n
IceDelegateD	cmdhelper.h	/^namespace IceDelegateD$/;"	n
IceDelegateM	cmdhelper.h	/^namespace IceDelegateM$/;"	n
IceInternal	cmdhelper.h	/^namespace IceInternal$/;"	n
IceProxy	cmdhelper.h	/^namespace IceProxy$/;"	n
LIGHT_BLUE	ColorDefine.h	9;"	d
LIGHT_CYAN	ColorDefine.h	12;"	d
LIGHT_GRAY	ColorDefine.h	17;"	d
LIGHT_GREEN	ColorDefine.h	7;"	d
LIGHT_PURPLE	ColorDefine.h	14;"	d
LIGHT_RED	ColorDefine.h	5;"	d
MAX	IniHelper.cpp	3;"	d	file:
MAX_CLIENT	MessageHandler.h	11;"	d
MAX_DEV	cmconfig.h	51;"	d
MAX_DEV_THREAD	cmconfig.h	52;"	d
MAX_SEC	IniHelper.h	15;"	d
MAX_TASK_NUM	cmconfig.h	50;"	d
MAX_VAL	os_independent.h	53;"	d
MAX_VAR	IniHelper.h	14;"	d
MIN	IniHelper.cpp	4;"	d	file:
MIN_VAL	os_independent.h	54;"	d
MODE_CMD	cmconfig.h	43;"	d
MODE_FILE	cmconfig.h	44;"	d
MSG_DONTWAIT	os_independent.h	48;"	d
MSG_NOSIGNAL	os_independent.h	45;"	d
MSG_TYPE_CMD	constdef.h	4;"	d
MSG_TYPE_DOWN_FILE	constdef.h	6;"	d
MSG_TYPE_STAT	constdef.h	3;"	d
MSG_TYPE_UP_FILE	constdef.h	5;"	d
NONE	ColorDefine.h	3;"	d
OBJS	Makefile	/^OBJS=cmtkd$/;"	m
PROXY_LEN	constdef.h	7;"	d
PURPLE	ColorDefine.h	13;"	d
PointerType	cmdhelper.h	/^    typedef CmdMessageHandlerPtr PointerType;$/;"	t	class:cmdhelper::CmdMessageHandler
ProcessCmd	MessageHandler.cpp	/^::cmdhelper::command CMessageHandler::ProcessCmd(const ::cmdhelper::command& cmd, const Ice::Current &)$/;"	f	class:CMessageHandler
ProcessCmd	cmdhelper.cpp	/^IceDelegateD::cmdhelper::CmdMessageHandler::ProcessCmd(const ::cmdhelper::command& cmd, const ::Ice::Context* __context)$/;"	f	class:IceDelegateD::cmdhelper::CmdMessageHandler
ProcessCmd	cmdhelper.cpp	/^IceDelegateM::cmdhelper::CmdMessageHandler::ProcessCmd(const ::cmdhelper::command& cmd, const ::Ice::Context* __context)$/;"	f	class:IceDelegateM::cmdhelper::CmdMessageHandler
ProcessCmd	cmdhelper.cpp	/^IceProxy::cmdhelper::CmdMessageHandler::ProcessCmd(const ::cmdhelper::command& cmd, const ::Ice::Context* __ctx)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProcessCmd	cmdhelper.h	/^    ::cmdhelper::command ProcessCmd(const ::cmdhelper::command& cmd)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProcessCmd	cmdhelper.h	/^    ::cmdhelper::command ProcessCmd(const ::cmdhelper::command& cmd, const ::Ice::Context& __ctx)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProcessMagicMessage	MessageHandler.cpp	/^int CMessageHandler::ProcessMagicMessage(const ::cmdhelper::magicmsg& msg, const Ice::Current &)$/;"	f	class:CMessageHandler
ProcessMagicMessage	cmdhelper.cpp	/^IceDelegateD::cmdhelper::CmdMessageHandler::ProcessMagicMessage(const ::cmdhelper::magicmsg& msg, const ::Ice::Context* __context)$/;"	f	class:IceDelegateD::cmdhelper::CmdMessageHandler
ProcessMagicMessage	cmdhelper.cpp	/^IceDelegateM::cmdhelper::CmdMessageHandler::ProcessMagicMessage(const ::cmdhelper::magicmsg& msg, const ::Ice::Context* __context)$/;"	f	class:IceDelegateM::cmdhelper::CmdMessageHandler
ProcessMagicMessage	cmdhelper.cpp	/^IceProxy::cmdhelper::CmdMessageHandler::ProcessMagicMessage(const ::cmdhelper::magicmsg& msg, const ::Ice::Context* __ctx)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProcessMagicMessage	cmdhelper.h	/^    ::Ice::Int ProcessMagicMessage(const ::cmdhelper::magicmsg& msg)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProcessMagicMessage	cmdhelper.h	/^    ::Ice::Int ProcessMagicMessage(const ::cmdhelper::magicmsg& msg, const ::Ice::Context& __ctx)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProcessMessage	MessageHandler.cpp	/^::cmdhelper::CommandMessage CMessageHandler::ProcessMessage(const ::cmdhelper::CommandMessage& msg, $/;"	f	class:CMessageHandler
ProcessMessage	cmdhelper.cpp	/^IceDelegateD::cmdhelper::CmdMessageHandler::ProcessMessage(const ::cmdhelper::CommandMessage& msg, const ::Ice::Context* __context)$/;"	f	class:IceDelegateD::cmdhelper::CmdMessageHandler
ProcessMessage	cmdhelper.cpp	/^IceDelegateM::cmdhelper::CmdMessageHandler::ProcessMessage(const ::cmdhelper::CommandMessage& msg, const ::Ice::Context* __context)$/;"	f	class:IceDelegateM::cmdhelper::CmdMessageHandler
ProcessMessage	cmdhelper.cpp	/^IceProxy::cmdhelper::CmdMessageHandler::ProcessMessage(const ::cmdhelper::CommandMessage& msg, const ::Ice::Context* __ctx)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProcessMessage	cmdhelper.h	/^    ::cmdhelper::CommandMessage ProcessMessage(const ::cmdhelper::CommandMessage& msg)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProcessMessage	cmdhelper.h	/^    ::cmdhelper::CommandMessage ProcessMessage(const ::cmdhelper::CommandMessage& msg, const ::Ice::Context& __ctx)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProcessNotify	MessageHandler.cpp	/^::cmdhelper::response  CMessageHandler::ProcessNotify(const ::cmdhelper::command& cmd, const Ice::Current &)$/;"	f	class:CMessageHandler
ProcessNotify	cmdhelper.cpp	/^IceDelegateD::cmdhelper::CmdMessageHandler::ProcessNotify(const ::cmdhelper::command& cmd, const ::Ice::Context* __context)$/;"	f	class:IceDelegateD::cmdhelper::CmdMessageHandler
ProcessNotify	cmdhelper.cpp	/^IceDelegateM::cmdhelper::CmdMessageHandler::ProcessNotify(const ::cmdhelper::command& cmd, const ::Ice::Context* __context)$/;"	f	class:IceDelegateM::cmdhelper::CmdMessageHandler
ProcessNotify	cmdhelper.cpp	/^IceProxy::cmdhelper::CmdMessageHandler::ProcessNotify(const ::cmdhelper::command& cmd, const ::Ice::Context* __ctx)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProcessNotify	cmdhelper.h	/^    ::cmdhelper::response ProcessNotify(const ::cmdhelper::command& cmd)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProcessNotify	cmdhelper.h	/^    ::cmdhelper::response ProcessNotify(const ::cmdhelper::command& cmd, const ::Ice::Context& __ctx)$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ProxyType	cmdhelper.h	/^    typedef CmdMessageHandlerPrx ProxyType;$/;"	t	class:cmdhelper::CmdMessageHandler
RED	ColorDefine.h	4;"	d
RET_CONNECT_FAILED	constdef.h	10;"	d
RET_DIR	constdef.h	13;"	d
RET_RUNCMD_FAILED	constdef.h	11;"	d
RET_SUCCES	constdef.h	12;"	d
RUN_BACK	cmconfig.h	47;"	d
RUN_REAL	cmconfig.h	46;"	d
ReadInt	IniHelper.cpp	/^int CIniHelper::ReadInt(const char *szSec, const char *szName, int nDefault)$/;"	f	class:CIniHelper
ReadSection	IniHelper.cpp	/^int CIniHelper::ReadSection(section & pSec)$/;"	f	class:CIniHelper
ReadString	IniHelper.cpp	/^char* CIniHelper::ReadString(const char *szSec, const char *szName, const char *szDefault)$/;"	f	class:CIniHelper
SEC_TITLE	IniHelper.h	13;"	d
SERVER_OBJS	Makefile	/^SERVER_OBJS=MessageHandler.o cmdhelper.o cmutils.o syslog_utils.o IniHelper.o NetHelper.o cm_utils.o host_tree.o cm_plugin.o$/;"	m
STR_IP	cmconfig.h	23;"	d
STR_IP	os_independent.h	50;"	d
StringArray	cmdhelper.h	/^typedef ::std::vector< ::std::string> StringArray;$/;"	t	namespace:cmdhelper
StringArray2	cmdhelper.h	/^typedef ::std::vector< ::cmdhelper::StringArray> StringArray2;$/;"	t	namespace:cmdhelper
TASKNUM	cmconfig.h	42;"	d
TASK_POOL_SIZE	cmconfig.h	127;"	d
UNLINK	os_independent.h	19;"	d
UNLINK	os_independent.h	42;"	d
VAR_NAME	IniHelper.h	11;"	d
VAR_VAL	IniHelper.h	12;"	d
WHITE	ColorDefine.h	18;"	d
YELLOW	ColorDefine.h	16;"	d
_CM_CONFIG_H_	cmconfig.h	2;"	d
_CM_PLUGIN_H	cm_plugin.h	2;"	d
_CM_UTILS_H_	cmutils.h	2;"	d
_CONST_DEF_H_	constdef.h	2;"	d
_CPLOR_DEF_	ColorDefine.h	2;"	d
_HOST_TREE	host_tree.h	2;"	d
_MSG_HD_H_	MessageHandler.h	3;"	d
_NT_HELPER_H_	NetHelper.h	2;"	d
_OS_INDEP_H_	os_independent.h	2;"	d
___ProcessCmd	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::___ProcessCmd(::IceInternal::Incoming& __inS, const ::Ice::Current& __current)$/;"	f	class:cmdhelper::CmdMessageHandler
___ProcessMagicMessage	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::___ProcessMagicMessage(::IceInternal::Incoming& __inS, const ::Ice::Current& __current)$/;"	f	class:cmdhelper::CmdMessageHandler
___ProcessMessage	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::___ProcessMessage(::IceInternal::Incoming& __inS, const ::Ice::Current& __current)$/;"	f	class:cmdhelper::CmdMessageHandler
___ProcessNotify	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::___ProcessNotify(::IceInternal::Incoming& __inS, const ::Ice::Current& __current)$/;"	f	class:cmdhelper::CmdMessageHandler
__cmdhelper__CmdMessageHandler__ProcessCmd_name	cmdhelper.cpp	/^static const ::std::string __cmdhelper__CmdMessageHandler__ProcessCmd_name = "ProcessCmd";$/;"	v	file:
__cmdhelper__CmdMessageHandler__ProcessMagicMessage_name	cmdhelper.cpp	/^static const ::std::string __cmdhelper__CmdMessageHandler__ProcessMagicMessage_name = "ProcessMagicMessage";$/;"	v	file:
__cmdhelper__CmdMessageHandler__ProcessMessage_name	cmdhelper.cpp	/^static const ::std::string __cmdhelper__CmdMessageHandler__ProcessMessage_name = "ProcessMessage";$/;"	v	file:
__cmdhelper__CmdMessageHandler__ProcessNotify_name	cmdhelper.cpp	/^static const ::std::string __cmdhelper__CmdMessageHandler__ProcessNotify_name = "ProcessNotify";$/;"	v	file:
__cmdhelper__CmdMessageHandler_all	cmdhelper.cpp	/^static ::std::string __cmdhelper__CmdMessageHandler_all[] =$/;"	v	file:
__cmdhelper__CmdMessageHandler_ids	cmdhelper.cpp	/^static const ::std::string __cmdhelper__CmdMessageHandler_ids[2] =$/;"	v	file:
__cmdhelper_h__	cmdhelper.h	14;"	d
__createDelegateD	cmdhelper.cpp	/^IceProxy::cmdhelper::CmdMessageHandler::__createDelegateD()$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
__createDelegateM	cmdhelper.cpp	/^IceProxy::cmdhelper::CmdMessageHandler::__createDelegateM()$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
__dispatch	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::__dispatch(::IceInternal::Incoming& in, const ::Ice::Current& current)$/;"	f	class:cmdhelper::CmdMessageHandler
__newInstance	cmdhelper.cpp	/^IceProxy::cmdhelper::CmdMessageHandler::__newInstance() const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
__patch__CmdMessageHandlerPtr	cmdhelper.cpp	/^cmdhelper::__patch__CmdMessageHandlerPtr(void* __addr, ::Ice::ObjectPtr& v)$/;"	f	class:cmdhelper
__read	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::__read(::IceInternal::BasicStream* __is, bool __rid)$/;"	f	class:cmdhelper::CmdMessageHandler
__read	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::__read(const ::Ice::InputStreamPtr&, bool)$/;"	f	class:cmdhelper::CmdMessageHandler
__read	cmdhelper.cpp	/^cmdhelper::CommandMessage::__read(::IceInternal::BasicStream* __is)$/;"	f	class:cmdhelper::CommandMessage
__read	cmdhelper.cpp	/^cmdhelper::__read(::IceInternal::BasicStream* __is, ::cmdhelper::CmdMessageHandlerPrx& v)$/;"	f	class:cmdhelper
__read	cmdhelper.cpp	/^cmdhelper::command::__read(::IceInternal::BasicStream* __is)$/;"	f	class:cmdhelper::command
__read	cmdhelper.cpp	/^cmdhelper::magicmsg::__read(::IceInternal::BasicStream* __is)$/;"	f	class:cmdhelper::magicmsg
__read	cmdhelper.cpp	/^cmdhelper::msghead::__read(::IceInternal::BasicStream* __is)$/;"	f	class:cmdhelper::msghead
__read	cmdhelper.cpp	/^cmdhelper::response::__read(::IceInternal::BasicStream* __is)$/;"	f	class:cmdhelper::response
__readStringArray2	cmdhelper.cpp	/^cmdhelper::__readStringArray2(::IceInternal::BasicStream* __is, ::cmdhelper::StringArray2& v)$/;"	f	class:cmdhelper
__write	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::__write(::IceInternal::BasicStream* __os) const$/;"	f	class:cmdhelper::CmdMessageHandler
__write	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::__write(const ::Ice::OutputStreamPtr&) const$/;"	f	class:cmdhelper::CmdMessageHandler
__write	cmdhelper.cpp	/^cmdhelper::CommandMessage::__write(::IceInternal::BasicStream* __os) const$/;"	f	class:cmdhelper::CommandMessage
__write	cmdhelper.cpp	/^cmdhelper::command::__write(::IceInternal::BasicStream* __os) const$/;"	f	class:cmdhelper::command
__write	cmdhelper.cpp	/^cmdhelper::magicmsg::__write(::IceInternal::BasicStream* __os) const$/;"	f	class:cmdhelper::magicmsg
__write	cmdhelper.cpp	/^cmdhelper::msghead::__write(::IceInternal::BasicStream* __os) const$/;"	f	class:cmdhelper::msghead
__write	cmdhelper.cpp	/^cmdhelper::response::__write(::IceInternal::BasicStream* __os) const$/;"	f	class:cmdhelper::response
__writeStringArray2	cmdhelper.cpp	/^cmdhelper::__writeStringArray2(::IceInternal::BasicStream* __os, const ::cmdhelper::StringArray* begin, const ::cmdhelper::StringArray* end)$/;"	f	class:cmdhelper
_auth_t	host_tree.h	/^typedef struct _auth_t$/;"	s
_task_t	cmconfig.h	/^typedef struct _task_t $/;"	s
active	cmconfig.h	/^	unsigned short  active; \/\/update task active$/;"	m	struct:__anon1
add_auth_info	host_tree.cpp	/^int add_auth_info (unsigned int addr, const char* user)$/;"	f
atoll	os_independent.h	/^static _int64 atoll(const char *string){return _atoi64(string);} $/;"	f
auth_on	cmconfig.h	/^	unsigned short  auth_on;\/\/$/;"	m	struct:__anon1
auth_t	host_tree.h	/^}auth_t;$/;"	t	typeref:struct:_auth_t
born_time	cmconfig.h	/^	time_t 		born_time;		\/\/time when this task node is born$/;"	m	struct:_task_t
byteArray	cmdhelper.h	/^typedef ::std::vector< ::Ice::Byte> byteArray;$/;"	t	namespace:cmdhelper
clientaddr	cmdhelper.h	/^    ::Ice::Long clientaddr;$/;"	m	struct:cmdhelper::command
clientid	cmdhelper.h	/^    ::Ice::Long clientid;$/;"	m	struct:cmdhelper::command
close_syslog	syslog_utils.cpp	/^int close_syslog(void)$/;"	f
cm_server_config_t	cmconfig.h	/^}cm_server_config_t;$/;"	t	typeref:struct:__anon1
cmd	cmdhelper.h	/^    ::std::string cmd;$/;"	m	struct:cmdhelper::CommandMessage
cmd_data	cmconfig.h	/^	string   cmd_data;			\/\/what command to run$/;"	m	struct:_task_t
cmd_queue_t	MessageHandler.cpp	/^typedef queue<command*> cmd_queue_t;$/;"	t	file:
cmd_ret	cmconfig.h	/^	::cmdhelper::StringArray cmd_ret;	\/\/what the command runs for ?$/;"	m	struct:_task_t
cmdev_t	cmconfig.h	/^}cmdev_t;$/;"	t	typeref:struct:__anon2
cmdhelper	cmdhelper.h	/^namespace cmdhelper$/;"	n
cmdhelper	cmdhelper.h	/^namespace cmdhelper$/;"	n	namespace:IceDelegate
cmdhelper	cmdhelper.h	/^namespace cmdhelper$/;"	n	namespace:IceDelegateD
cmdhelper	cmdhelper.h	/^namespace cmdhelper$/;"	n	namespace:IceDelegateM
cmdhelper	cmdhelper.h	/^namespace cmdhelper$/;"	n	namespace:IceProxy
cmdid	cmconfig.h	/^	unsigned int 	cmdid; 			\/\/command id$/;"	m	struct:_task_t
cmdid	cmdhelper.h	/^    ::Ice::Int cmdid;$/;"	m	struct:cmdhelper::command
cmdtype	cmdhelper.h	/^    ::Ice::Int cmdtype;$/;"	m	struct:cmdhelper::command
command	cmdhelper.h	/^struct command$/;"	s	namespace:cmdhelper
commandid	cmdhelper.h	/^    ::Ice::Long commandid;$/;"	m	struct:cmdhelper::msghead
daemon	cmconfig.h	/^	unsigned short 	daemon;$/;"	m	struct:__anon1
daemon_func	cm_utils.cpp	/^int daemon_func (int nochdir, int noclose)$/;"	f
data	cmdhelper.h	/^    ::cmdhelper::byteArray data;$/;"	m	struct:cmdhelper::command
data	cmdhelper.h	/^    ::cmdhelper::byteArray data;$/;"	m	struct:cmdhelper::magicmsg
dev_index	cmconfig.h	/^	unsigned long dev_index;$/;"	m	struct:__anon2
dev_ip	cmconfig.h	/^	unsigned int dev_ip;  	\/\/device ip$/;"	m	struct:__anon2
dev_list	cmconfig.h	/^	cmdev_t dev_list[MAX_DEV]; \/\/device list$/;"	m	struct:__anon3
dev_list_t	cmconfig.h	/^}dev_list_t;$/;"	t	typeref:struct:__anon3
dev_name	cmconfig.h	/^	char		dev_name[HOST_NAME];$/;"	m	struct:__anon2
dev_num	cmconfig.h	/^	int   dev_num; \/\/device number$/;"	m	struct:__anon3
device_t	NetHelper.h	/^	}device_t;$/;"	t	typeref:struct:__anon6
devtype	cmconfig.h	/^	unsigned short	devtype;	\/\/1 for master 2 for slave$/;"	m	struct:__anon1
do_notify_task	MessageHandler.cpp	/^int do_notify_task (void)$/;"	f
dstfile	cmdhelper.h	/^    ::std::string dstfile;$/;"	m	struct:cmdhelper::msghead
entry_list	IniHelper.h	/^	var_entry entry_list[MAX_VAR];$/;"	m	struct:section
entry_number	IniHelper.h	/^	int		entry_number;$/;"	m	struct:section
facility	syslog_utils.cpp	/^int facility = LOG_LOCAL5;$/;"	v
file	cmdhelper.h	/^    ::std::string file;$/;"	m	struct:cmdhelper::msghead
filedata	cmdhelper.h	/^    ::cmdhelper::byteArray filedata;$/;"	m	struct:cmdhelper::CommandMessage
filedata	cmdhelper.h	/^    ::cmdhelper::byteArray filedata;$/;"	m	struct:cmdhelper::response
fileinfo	cmdhelper.h	/^    ::cmdhelper::byteArray fileinfo;$/;"	m	struct:cmdhelper::CommandMessage
filemd5	cmdhelper.h	/^    ::std::string filemd5;$/;"	m	struct:cmdhelper::msghead
filename	cmdhelper.h	/^    ::std::string filename;$/;"	m	struct:cmdhelper::response
filesize	cmdhelper.h	/^    ::Ice::Long filesize;$/;"	m	struct:cmdhelper::msghead
find_auth_info	host_tree.cpp	/^bool find_auth_info (unsigned int addr, const char* szuser, const char* szlogin)$/;"	f
finish_time	cmconfig.h	/^	time_t	finish_time;	\/\/when it finish running..$/;"	m	struct:__anon2
g_auth_list	host_tree.cpp	/^auth_t * g_auth_list[256];$/;"	v
g_cmd_queue	MessageHandler.cpp	/^cmd_queue_t g_cmd_queue;$/;"	v
g_cmd_queue_mutex	MessageHandler.cpp	/^pthread_mutex_t  g_cmd_queue_mutex;$/;"	v
g_host	MessageHandler.cpp	/^unsigned int   g_host  = 0;\/\/reply host$/;"	v
g_index_cmd	MessageHandler.cpp	/^unsigned int 	 g_index_cmd = 0;$/;"	v
g_index_mutex	MessageHandler.cpp	/^pthread_mutex_t  g_index_mutex;$/;"	v
g_myaddr	MessageHandler.cpp	/^unsigned int   g_myaddr = 0;$/;"	v
g_over_task_list	MessageHandler.cpp	/^task_list_t g_over_task_list;$/;"	v
g_port	MessageHandler.cpp	/^unsigned short g_port = 0; \/\/reply port$/;"	v
g_server_config	MessageHandler.cpp	/^cm_server_config_t g_server_config;$/;"	v
g_task_list	MessageHandler.cpp	/^task_list_t g_task_list;$/;"	v
g_task_pool	MessageHandler.cpp	/^task_list_t g_task_pool;$/;"	v
g_tid_heartbt	MessageHandler.cpp	/^pthread_t g_tid_heartbt;$/;"	v
g_tid_report	MessageHandler.cpp	/^pthread_t g_tid_report;$/;"	v
g_tid_update	MessageHandler.cpp	/^pthread_t g_tid_update;$/;"	v
g_tid_work	MessageHandler.cpp	/^pthread_t * g_tid_work = 0;$/;"	v
get_conf	cm_utils.cpp	/^char*	get_conf(const char* path, const char* dft)$/;"	f
get_time_str	MessageHandler.cpp	/^static char* get_time_str(time_t * tm)$/;"	f	file:
gid	cmdhelper.h	/^    ::Ice::Int gid;$/;"	m	struct:cmdhelper::msghead
handle_cmd_message	MessageHandler.cpp	/^int	CMessageHandler::handle_cmd_message(const ::cmdhelper::CommandMessage& msg, $/;"	f	class:CMessageHandler
handle_conf_message	MessageHandler.cpp	/^int	CMessageHandler::handle_conf_message (const ::cmdhelper::command& cmd)$/;"	f	class:CMessageHandler
handle_fetch_message	MessageHandler.cpp	/^int	CMessageHandler::handle_fetch_message(const ::cmdhelper::CommandMessage& msg, $/;"	f	class:CMessageHandler
handle_file_message	MessageHandler.cpp	/^int	CMessageHandler::handle_file_message(const ::cmdhelper::CommandMessage& msg, $/;"	f	class:CMessageHandler
handle_report_message	MessageHandler.cpp	/^int	CMessageHandler::handle_report_message(const ::cmdhelper::CommandMessage& msg, $/;"	f	class:CMessageHandler
head	cmdhelper.h	/^    ::cmdhelper::msghead head;$/;"	m	struct:cmdhelper::CommandMessage
heart_time_out	cmconfig.h	/^	unsigned int 	heart_time_out;		\/\/time out for heart beat message $/;"	m	struct:_task_t
heartbt_thread_func	MessageHandler.cpp	/^void *heartbt_thread_func(void *arg)$/;"	f
host	cmdhelper.h	/^    ::Ice::Long host;$/;"	m	struct:cmdhelper::command
host_func_t	cmconfig.h	/^typedef int(*host_func_t)(cmdev_t * dev);$/;"	t
hostaddr	cmdhelper.h	/^    ::Ice::Long hostaddr;$/;"	m	struct:cmdhelper::msghead
hostname	cmconfig.h	/^	char	hostname[64];$/;"	m	struct:__anon5
hostport	cmdhelper.h	/^    ::Ice::Int hostport;$/;"	m	struct:cmdhelper::msghead
ice_adapterId	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_adapterId(const std::string& __id) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_batchDatagram	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_batchDatagram() const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_batchOneway	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_batchOneway() const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_clone	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::ice_clone() const$/;"	f	class:cmdhelper::CmdMessageHandler
ice_collocationOptimized	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_collocationOptimized(bool __co) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_compress	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_compress(bool __compress) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_connectionCached	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_connectionCached(bool __cached) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_connectionId	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_connectionId(const std::string& __id) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_context	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_context(const ::Ice::Context& __context) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_datagram	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_datagram() const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_endpointSelection	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_endpointSelection(::Ice::EndpointSelectionType __est) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_endpoints	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_endpoints(const ::Ice::EndpointSeq& __endpoints) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_id	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::ice_id(const ::Ice::Current&) const$/;"	f	class:cmdhelper::CmdMessageHandler
ice_ids	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::ice_ids(const ::Ice::Current&) const$/;"	f	class:cmdhelper::CmdMessageHandler
ice_isA	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::ice_isA(const ::std::string& _s, const ::Ice::Current&) const$/;"	f	class:cmdhelper::CmdMessageHandler
ice_locator	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_locator(const ::Ice::LocatorPrx& __locator) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_locatorCacheTimeout	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_locatorCacheTimeout(int __timeout) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_oneway	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_oneway() const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_preferSecure	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_preferSecure(bool __preferSecure) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_router	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_router(const ::Ice::RouterPrx& __router) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_secure	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_secure(bool __secure) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_staticId	cmdhelper.cpp	/^IceProxy::cmdhelper::CmdMessageHandler::ice_staticId()$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_staticId	cmdhelper.cpp	/^cmdhelper::CmdMessageHandler::ice_staticId()$/;"	f	class:cmdhelper::CmdMessageHandler
ice_timeout	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_timeout(int __timeout) const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
ice_twoway	cmdhelper.h	/^    ::IceInternal::ProxyHandle<CmdMessageHandler> ice_twoway() const$/;"	f	class:IceProxy::cmdhelper::CmdMessageHandler
index	cmconfig.h	/^	unsigned long index;$/;"	m	struct:__anon2
index	cmdhelper.h	/^    ::std::string index;$/;"	m	struct:cmdhelper::msghead
infodata	cmdhelper.h	/^    ::cmdhelper::byteArray infodata;$/;"	m	struct:cmdhelper::response
infoname	cmdhelper.h	/^    ::std::string infoname;$/;"	m	struct:cmdhelper::response
init_auth_info	MessageHandler.cpp	/^void	CMessageHandler::init_auth_info(void)$/;"	f	class:CMessageHandler
init_auth_list	host_tree.cpp	/^int init_auth_list (void)$/;"	f
init_cmd_server	MessageHandler.cpp	/^int	CMessageHandler::init_cmd_server (void)$/;"	f	class:CMessageHandler
init_server	MessageHandler.cpp	/^int	CMessageHandler::init_server(void)$/;"	f	class:CMessageHandler
init_stat_server	MessageHandler.cpp	/^int	CMessageHandler::init_stat_server (void)$/;"	f	class:CMessageHandler
init_syslog	syslog_utils.cpp	/^int init_syslog()$/;"	f
interval	cmconfig.h	/^	unsigned short	interval;\/\/ heart beat interval$/;"	m	struct:__anon1
interval	syslog_utils.cpp	/^int interval = 60;$/;"	v
ip	NetHelper.h	/^		unsigned int ip;$/;"	m	struct:__anon6
ipArray	cmdhelper.h	/^typedef ::std::vector< ::Ice::Long> ipArray;$/;"	t	namespace:cmdhelper
ip_list	cmtkctl.cpp	/^ip_struct_t ip_list[500];$/;"	v
ip_num	cmtkctl.cpp	/^int  ip_num = 0;$/;"	v
ip_struct_t	cmconfig.h	/^}ip_struct_t;$/;"	t	typeref:struct:__anon5
ipaddr	cmconfig.h	/^	unsigned int ipaddr;$/;"	m	struct:__anon5
iplist	host_tree.h	/^	unsigned int iplist[256];$/;"	m	struct:_auth_t
ipnum	host_tree.h	/^	unsigned int ipnum;$/;"	m	struct:_auth_t
key_t	os_independent.h	/^typedef int key_t;$/;"	t
length	host_tree.h	/^	int length;	$/;"	m	struct:_auth_t
level	syslog_utils.cpp	/^int level = LOG_INFO; $/;"	v
list	cmconfig.h	/^	task_t * list; \/\/task list$/;"	m	struct:__anon4
local_addr	cmconfig.h	/^	unsigned int 	local_addr;$/;"	m	struct:_task_t
localaddr	cmdhelper.h	/^    ::Ice::Long localaddr;$/;"	m	struct:cmdhelper::msghead
localfile	cmdhelper.h	/^    ::std::string localfile;$/;"	m	struct:cmdhelper::msghead
log_on	syslog_utils.cpp	/^int log_on = 1;$/;"	v
login	cmdhelper.h	/^    ::std::string login;$/;"	m	struct:cmdhelper::msghead
m_Error	IniHelper.h	/^	int  m_Error; \/\/ error flag$/;"	m	class:CIniHelper
m_fp	IniHelper.h	/^	FILE * m_fp ; \/\/file pointer$/;"	m	class:CIniHelper
m_iplist	MessageHandler.h	/^	ip_struct_t	m_iplist[MAX_CLIENT];$/;"	m	class:CMessageHandler
m_ipnum	MessageHandler.h	/^	int		m_ipnum;$/;"	m	class:CMessageHandler
m_nRet	IniHelper.h	/^	int  m_nRet;$/;"	m	class:CIniHelper
m_pos	IniHelper.h	/^	long m_pos;$/;"	m	class:CIniHelper
m_strRet	IniHelper.h	/^	char m_strRet[VAR_VAL];$/;"	m	class:CIniHelper
mac	NetHelper.h	/^		unsigned char mac[6];$/;"	m	struct:__anon6
magicmsg	cmdhelper.h	/^struct magicmsg$/;"	s	namespace:cmdhelper
main	cmtkctl.cpp	/^int main (int argc, char* argv[])$/;"	f
main	cmtkd.cpp	/^int main(int argc, char* argv[])$/;"	f
mem_file_handle	os_independent.h	/^typedef HANDLE    mem_file_handle;$/;"	t
mem_file_handle	os_independent.h	/^typedef void*    mem_file_handle;$/;"	t
mkdir_rec	cm_utils.cpp	/^int 	mkdir_rec(const char* path)$/;"	f
mode	cmconfig.h	/^	unsigned short 	mode; \/\/ 1 for popen 2 for system$/;"	m	struct:__anon1
more	cmdhelper.h	/^    ::Ice::Int more;$/;"	m	struct:cmdhelper::response
msghead	cmdhelper.h	/^struct msghead$/;"	s	namespace:cmdhelper
msgtype	cmdhelper.h	/^    ::Ice::Int msgtype;$/;"	m	struct:cmdhelper::msghead
mutex	cmconfig.h	/^	int		mutex;$/;"	m	struct:__anon4
mutex	cmconfig.h	/^	pthread_mutex_t mutex; \/\/mutex$/;"	m	struct:__anon4
name	NetHelper.h	/^		char	name[10];$/;"	m	struct:__anon6
netmask	NetHelper.h	/^		unsigned int netmask;$/;"	m	struct:__anon6
next	cmconfig.h	/^	struct _task_t * next;			\/\/where next node is stored$/;"	m	struct:_task_t	typeref:struct:_task_t::_task_t
next	host_tree.h	/^	struct _auth_t * next;$/;"	m	struct:_auth_t	typeref:struct:_auth_t::_auth_t
nothing	cmconfig.h	/^	char nothing[10];$/;"	m	struct:__anon5
nret	cmconfig.h	/^	int 	 nret;		\/\/return value > 0 success else failed$/;"	m	struct:__anon2
nret	cmdhelper.h	/^    ::Ice::Int nret;$/;"	m	struct:cmdhelper::msghead
operator !=	cmdhelper.h	/^    bool operator!=(const CommandMessage& __rhs) const$/;"	f	struct:cmdhelper::CommandMessage
operator !=	cmdhelper.h	/^    bool operator!=(const command& __rhs) const$/;"	f	struct:cmdhelper::command
operator !=	cmdhelper.h	/^    bool operator!=(const magicmsg& __rhs) const$/;"	f	struct:cmdhelper::magicmsg
operator !=	cmdhelper.h	/^    bool operator!=(const msghead& __rhs) const$/;"	f	struct:cmdhelper::msghead
operator !=	cmdhelper.h	/^    bool operator!=(const response& __rhs) const$/;"	f	struct:cmdhelper::response
operator <	cmdhelper.cpp	/^cmdhelper::CommandMessage::operator<(const CommandMessage& __rhs) const$/;"	f	class:cmdhelper::CommandMessage
operator <	cmdhelper.cpp	/^cmdhelper::command::operator<(const command& __rhs) const$/;"	f	class:cmdhelper::command
operator <	cmdhelper.cpp	/^cmdhelper::magicmsg::operator<(const magicmsg& __rhs) const$/;"	f	class:cmdhelper::magicmsg
operator <	cmdhelper.cpp	/^cmdhelper::msghead::operator<(const msghead& __rhs) const$/;"	f	class:cmdhelper::msghead
operator <	cmdhelper.cpp	/^cmdhelper::operator<(const ::cmdhelper::CmdMessageHandler& l, const ::cmdhelper::CmdMessageHandler& r)$/;"	f	class:cmdhelper
operator <	cmdhelper.cpp	/^cmdhelper::response::operator<(const response& __rhs) const$/;"	f	class:cmdhelper::response
operator <=	cmdhelper.h	/^    bool operator<=(const CommandMessage& __rhs) const$/;"	f	struct:cmdhelper::CommandMessage
operator <=	cmdhelper.h	/^    bool operator<=(const command& __rhs) const$/;"	f	struct:cmdhelper::command
operator <=	cmdhelper.h	/^    bool operator<=(const magicmsg& __rhs) const$/;"	f	struct:cmdhelper::magicmsg
operator <=	cmdhelper.h	/^    bool operator<=(const msghead& __rhs) const$/;"	f	struct:cmdhelper::msghead
operator <=	cmdhelper.h	/^    bool operator<=(const response& __rhs) const$/;"	f	struct:cmdhelper::response
operator ==	cmdhelper.cpp	/^cmdhelper::CommandMessage::operator==(const CommandMessage& __rhs) const$/;"	f	class:cmdhelper::CommandMessage
operator ==	cmdhelper.cpp	/^cmdhelper::command::operator==(const command& __rhs) const$/;"	f	class:cmdhelper::command
operator ==	cmdhelper.cpp	/^cmdhelper::magicmsg::operator==(const magicmsg& __rhs) const$/;"	f	class:cmdhelper::magicmsg
operator ==	cmdhelper.cpp	/^cmdhelper::msghead::operator==(const msghead& __rhs) const$/;"	f	class:cmdhelper::msghead
operator ==	cmdhelper.cpp	/^cmdhelper::operator==(const ::cmdhelper::CmdMessageHandler& l, const ::cmdhelper::CmdMessageHandler& r)$/;"	f	class:cmdhelper
operator ==	cmdhelper.cpp	/^cmdhelper::response::operator==(const response& __rhs) const$/;"	f	class:cmdhelper::response
operator >	cmdhelper.h	/^    bool operator>(const CommandMessage& __rhs) const$/;"	f	struct:cmdhelper::CommandMessage
operator >	cmdhelper.h	/^    bool operator>(const command& __rhs) const$/;"	f	struct:cmdhelper::command
operator >	cmdhelper.h	/^    bool operator>(const magicmsg& __rhs) const$/;"	f	struct:cmdhelper::magicmsg
operator >	cmdhelper.h	/^    bool operator>(const msghead& __rhs) const$/;"	f	struct:cmdhelper::msghead
operator >	cmdhelper.h	/^    bool operator>(const response& __rhs) const$/;"	f	struct:cmdhelper::response
operator >=	cmdhelper.h	/^    bool operator>=(const CommandMessage& __rhs) const$/;"	f	struct:cmdhelper::CommandMessage
operator >=	cmdhelper.h	/^    bool operator>=(const command& __rhs) const$/;"	f	struct:cmdhelper::command
operator >=	cmdhelper.h	/^    bool operator>=(const magicmsg& __rhs) const$/;"	f	struct:cmdhelper::magicmsg
operator >=	cmdhelper.h	/^    bool operator>=(const msghead& __rhs) const$/;"	f	struct:cmdhelper::msghead
operator >=	cmdhelper.h	/^    bool operator>=(const response& __rhs) const$/;"	f	struct:cmdhelper::response
over	cmconfig.h	/^	bool	 over;		\/\/is it run over ?$/;"	m	struct:__anon2
over_time	cmconfig.h	/^	time_t 		over_time;		\/\/run over time$/;"	m	struct:_task_t
parse_options	cmutils.cpp	/^int	parse_options (int argc, char* argv[])$/;"	f
pid	cmdhelper.h	/^    ::Ice::Int pid;$/;"	m	struct:cmdhelper::command
port	cmconfig.h	/^	unsigned short 	port;$/;"	m	struct:__anon1
port	cmdhelper.h	/^    ::Ice::Int port;$/;"	m	struct:cmdhelper::command
rand_num1	cmconfig.h	/^	int rand_num1;$/;"	m	struct:__anon5
remotefile	cmdhelper.h	/^    ::std::string remotefile;$/;"	m	struct:cmdhelper::msghead
report_task	MessageHandler.cpp	/^int report_task (const task_t * task)$/;"	f
report_thread_func	MessageHandler.cpp	/^void *report_thread_func(void *arg)$/;"	f
response	cmdhelper.h	/^struct response$/;"	s	namespace:cmdhelper
result	cmconfig.h	/^	unsigned int	result;			\/\/result of this task$/;"	m	struct:_task_t
result	cmdhelper.h	/^    ::cmdhelper::StringArray result;$/;"	m	struct:cmdhelper::CommandMessage
retmsg	cmconfig.h	/^	::cmdhelper::StringArray retmsg;\/\/result of command$/;"	m	struct:__anon2
run_cmd	MessageHandler.cpp	/^int	run_cmd(const string & cmd, ::cmdhelper::StringArray & result)$/;"	f
run_time	cmconfig.h	/^	time_t 		run_time;		\/\/start run time$/;"	m	struct:_task_t
runmode	cmdhelper.h	/^    ::Ice::Int runmode;$/;"	m	struct:cmdhelper::msghead
section	IniHelper.h	/^struct section$/;"	s
show_version	cmutils.cpp	/^int 	show_version 	(int argc, char* argv[])$/;"	f
socklen_t	os_independent.h	/^typedef int socklen_t;$/;"	t
srchost	cmdhelper.h	/^    ::cmdhelper::ipArray srchost;$/;"	m	struct:cmdhelper::msghead
start_time	cmconfig.h	/^	time_t	start_time;	\/\/when it start to runing..$/;"	m	struct:__anon2
stat_server_addr	cmconfig.h	/^	unsigned int	stat_server_addr;	\/\/ address of stat server$/;"	m	struct:_task_t
stat_server_port	cmconfig.h	/^	unsigned short 	stat_server_port;	\/\/ port of stat server	$/;"	m	struct:_task_t
status	cmconfig.h	/^	unsigned int 	status; 		\/\/status of this task node$/;"	m	struct:_task_t
status	cmconfig.h	/^enum status $/;"	g
status_over	cmconfig.h	/^	status_over = 3$/;"	e	enum:status
status_ready	cmconfig.h	/^	status_ready = 1,$/;"	e	enum:status
status_working	cmconfig.h	/^	status_working = 2,$/;"	e	enum:status
stmode	cmdhelper.h	/^    ::Ice::Long stmode;$/;"	m	struct:cmdhelper::msghead
strcasecmp	IniHelper.h	/^static int strcasecmp(const char *s1, const char *s2)$/;"	f
strncasecmp	IniHelper.h	/^static int strncasecmp(const char *s1, const char *s2, size_t n)$/;"	f
syslog_msg	syslog_utils.cpp	/^int syslog_msg(const char * szMsg,...)$/;"	f
szuser	host_tree.h	/^	char * szuser;$/;"	m	struct:_auth_t
t_main	cmtkd.cpp	/^int t_main(int argc, char* argv[])$/;"	f
task_list_t	cmconfig.h	/^}task_list_t;$/;"	t	typeref:struct:__anon4
task_t	cmconfig.h	/^}task_t;$/;"	t	typeref:struct:_task_t
taskid	cmconfig.h	/^	unsigned int	taskid;$/;"	m	struct:_task_t
taskid	cmdhelper.h	/^    ::Ice::Int taskid;$/;"	m	struct:cmdhelper::msghead
threadnum	cmconfig.h	/^	unsigned short	threadnum;\/\/number of working threads$/;"	m	struct:__anon1
timestamp	cmdhelper.h	/^    ::Ice::Long timestamp;$/;"	m	struct:cmdhelper::msghead
title	IniHelper.h	/^	char title[SEC_TITLE];$/;"	m	struct:section
total_time_out	cmconfig.h	/^	unsigned int  	total_time_out; 	\/\/total time out for this task$/;"	m	struct:_task_t
tt	os_independent.h	/^static int tt = 1;$/;"	v
type	cmdhelper.h	/^    ::Ice::Int type;$/;"	m	struct:cmdhelper::magicmsg
uid	cmdhelper.h	/^    ::Ice::Int uid;$/;"	m	struct:cmdhelper::msghead
upCast	cmdhelper.cpp	/^::Ice::Object* IceInternal::upCast(::cmdhelper::CmdMessageHandler* p) { return p; }$/;"	f	class:IceInternal
upCast	cmdhelper.cpp	/^::IceProxy::Ice::Object* IceInternal::upCast(::IceProxy::cmdhelper::CmdMessageHandler* p) { return p; }$/;"	f	class:IceInternal
update_thread_func	MessageHandler.cpp	/^void *update_thread_func(void *arg)$/;"	f
user	cmconfig.h	/^	char 	user[64];$/;"	m	struct:__anon5
username	cmdhelper.h	/^    ::std::string username;$/;"	m	struct:cmdhelper::msghead
var_entry	IniHelper.h	/^struct var_entry$/;"	s
var_name	IniHelper.h	/^	char var_name[VAR_NAME];$/;"	m	struct:var_entry
var_value	IniHelper.h	/^	char var_value[VAR_VAL];$/;"	m	struct:var_entry
work_thread_func	MessageHandler.cpp	/^void *work_thread_func(void *arg)$/;"	f
~CIniHelper	IniHelper.cpp	/^CIniHelper::~CIniHelper()$/;"	f	class:CIniHelper
~CMessageHandler	MessageHandler.cpp	/^CMessageHandler::~CMessageHandler()$/;"	f	class:CMessageHandler
